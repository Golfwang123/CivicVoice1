üåê Step-by-Step Functionality Flow
1. User Access and Registration (Optional for MVP)
	‚Ä¢	Option 1: Guest Access
	‚Ä¢	User visits the website and can interact without creating an account.
	‚Ä¢	They can view projects, upvote, and send emails.
	‚Ä¢	Option 2: User Registration (Optional for MVP)
	‚Ä¢	Users can register an account via email or Google login.
	‚Ä¢	Registered users can track which projects they‚Äôve supported and view their activity history.

2. Issue Submission (Core Feature)
	‚Ä¢	User clicks ‚ÄúSubmit a New Project‚Äù on the homepage.
	‚Ä¢	They fill out a form with the following fields:
	‚Ä¢	Issue Type: Dropdown (e.g., Crosswalk, Pothole, Sidewalk Damage, etc.).
	‚Ä¢	Location Pin: The user drops a pin on an interactive map to mark the exact location.
	‚Ä¢	Description: Optional text to describe the issue in more detail.
	‚Ä¢	Urgency Level: Low, Medium, High (optional).
	‚Ä¢	Contact Info (optional, if they want updates).
	‚Ä¢	Submit Button: Once the form is filled out, the user clicks submit.

3. AI Email Generation
	‚Ä¢	Upon submission, the backend triggers the OpenAI API to generate an email draft using the provided details.
	‚Ä¢	The prompt might look like:
	‚ÄúWrite a professional email to a local city official requesting the installation of a crosswalk at [Location]. Mention the urgency as [Urgency Level] and describe the issue as [User Description].‚Äù
	‚Ä¢	User Preview:
	‚Ä¢	The AI-generated email is presented to the user for review.
	‚Ä¢	Users can:
	‚Ä¢	Edit the email for personalization.
	‚Ä¢	Adjust Tone (e.g., more formal, assertive).
	‚Ä¢	Send it directly or Save as Draft.

4. Project Creation on Community Board
	‚Ä¢	Once the user sends the email, the project is automatically posted to the Community Board.
	‚Ä¢	Each project card on the board includes:
	‚Ä¢	Title: Auto-generated or provided by the user.
	‚Ä¢	Location: Linked to the map pin.
	‚Ä¢	Short Description: Basic details about the issue.
	‚Ä¢	AI-Generated Email (viewable by others).
	‚Ä¢	Upvote Button: Allows others to support the project.
	‚Ä¢	Progress Bar: Initial status set to ‚ÄúIdea Submitted.‚Äù
	‚Ä¢	‚ÄúSend This Email‚Äù Button: Allows others to send the same email to the city official.

5. Mass Email Participation
	‚Ä¢	Other users browse the community board and find projects they support.
	‚Ä¢	To participate:
	‚Ä¢	They click ‚ÄúSend This Email‚Äù on the project card.
	‚Ä¢	The AI-generated email is displayed.
	‚Ä¢	Users can choose to:
	‚Ä¢	Send the email as-is.
	‚Ä¢	Customize it with additional comments.
	‚Ä¢	Opt to remain anonymous or sign the email.
	‚Ä¢	The email is sent to the relevant official, and the system updates the ‚ÄúEmails Sent‚Äù counter.

6. Progress Tracking and Updates
	‚Ä¢	Each project has a progress bar with predefined stages:
	‚Ä¢	Idea Submitted (automatically set when first posted).
	‚Ä¢	Community Support (automatically progresses based on upvotes and email counts).
	‚Ä¢	Email Campaign Active (when a threshold of emails is sent).
	‚Ä¢	Official Acknowledgment (optional, if an official responds).
	‚Ä¢	Planning Stage (optional, marked manually or through admin updates).
	‚Ä¢	Implementation (optional, marked when actual changes begin).
	‚Ä¢	Completed (when the issue is resolved).
	‚Ä¢	Manual Updates:
	‚Ä¢	The admin or project creator can manually update progress stages based on responses or government actions.

7. Community Board Interactions
	‚Ä¢	Users can:
	‚Ä¢	Upvote projects they support.
	‚Ä¢	Comment on projects (optional feature for future development).
	‚Ä¢	Filter Projects by location, type of issue, or progress status.
	‚Ä¢	Search for specific issues (like nearby crosswalk proposals).

8. Admin Dashboard (Optional for MVP)
	‚Ä¢	Admins can:
	‚Ä¢	View and manage all project submissions.
	‚Ä¢	Manually update project progress.
	‚Ä¢	Approve or flag projects for quality control.
	‚Ä¢	Track engagement metrics (like total emails sent, most upvoted projects).

9. Notifications (Optional for MVP)
	‚Ä¢	Users receive notifications for:
	‚Ä¢	When a project they‚Äôve supported receives an update.
	‚Ä¢	When their submitted project progresses to a new stage.
	‚Ä¢	When an official responds to their email.

10. Deployment and User Feedback
	‚Ä¢	Once the MVP is deployed:
	‚Ä¢	Users can test and provide feedback.
	‚Ä¢	The team can refine features, add new ones, and polish the interface.

üéØ Key User Experience (UX) Principles
	1.	Minimal Effort to Participate:
	‚Ä¢	Just a few clicks to submit an issue, generate an email, and send it.
	2.	Visual Progress Tracking:
	‚Ä¢	Clear progress bars and stages keep users informed.
	3.	Social Proof and Community Support:
	‚Ä¢	Visible upvote counts and ‚ÄúEmails Sent‚Äù encourage more participation.
	4.	Transparency:
	‚Ä¢	All projects and their progress are publicly visible to encourage accountability.

How the System Works in the Background
	1.	Backend (Node.js + Express)
	‚Ä¢	Handles API requests, stores data, and connects to external services like OpenAI.
	2.	Database (PostgreSQL)
	‚Ä¢	Stores all project data, user data, votes, and progress statuses.
	3.	AI (OpenAI API)
	‚Ä¢	Generates email drafts based on user inputs.
	4.	Email Sending (SendGrid/Mailgun)
	‚Ä¢	Automatically sends emails to designated local officials.
	5.	Frontend (React)
	‚Ä¢	Displays forms, community board, and interactive elements.

‚ö° The Core Loop (User Flow Summary)
	1.	User Submits Issue ‚Üí AI Generates Email ‚Üí Email Sent ‚Üí Project Appears on Board
	2.	Community Upvotes ‚Üí More Users Send Emails ‚Üí Progress is Tracked
	3.	Project Moves Towards Resolution ‚Üí Progress Bar Updates ‚Üí Community Stays Engaged


